name: Run ansible playbook

on:
  push:
  workflow_dispatch:

env: 
  HETZNER_TOKEN: ${{ secrets.HETZNER_TOKEN }}
  HETZNER_SERVER_TYPE: ${{ secrets.HETZNER_SERVER_TYPE || 'cx11' }}
  HETZNER_SERVER_NAME: ${{ secrets.HETZNER_SERVER_NAME || 'server' }}
  HETZNER_SERVER_LOCATION: ${{ secrets.HETZNER_SERVER_LOCATION || 'hel1' }}
  HETZNER_SSH_NAME: ${{ secrets.HETZNER_SSH_NAME }}
  SSH_KEY: ${{ secrets.SSH_KEY }}
  CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
  CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE }}
  CLOUDFLARE_EMAIL: ${{ secrets.CLOUDFLARE_EMAIL }}
  CLOUDFLARE_RECORD: ${{ secrets.CLOUDFLARE_RECORD || 'server' }}  
  USERNAME: ${{ secrets.USERNAME || 'user' }}

jobs:
  set-up-server:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Exit if required SECRETS are not set
        run: echo "You need to have at least following SECRET HETZNER_TOKEN, HETZNER_SSH_NAME "; exit 1
        if: ${{ env.HETZNER_TOKEN  == '' || env.HETZNER_SSH_NAME == ''}}

      - name: Install Ansible Galaxy collections
        run:  ansible-galaxy collection install hetzner.hcloud community.general

      - name: Install dependencies
        run: pip3 install python-dateutil hcloud 
        
      - name: Upgrade ansible
        run: pip3 install --upgrade ansible

      - name: Create server
        run: ansible-playbook playbooks/create_server.yml
        env:
          HETZNER_TOKEN: ${{ env.HETZNER_TOKEN }}
          HETZNER_SERVER_TYPE: ${{ env.HETZNER_SERVER_TYPE }}
          HETZNER_SERVER_NAME: ${{ env.HETZNER_SERVER_NAME }}
          HETZNER_SSH_NAME: ${{ env.HETZNER_SSH_NAME }}
          CLOUDFLARE_TOKEN: ${{ env.CLOUDFLARE_TOKEN }}

      - name: set up SSH-key
        run: mkdir ~/.ssh && echo "${{ env.SSH_KEY }}" > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa

      - name: Manage server
        run: ansible-playbook playbooks/manage_server.yml
        env:
          HETZNER_TOKEN: ${{ env.HETZNER_TOKEN }}
          HETZNER_SERVER_NAME: ${{ env.HETZNER_SERVER_NAME }}
          USERNAME: ${{ env.USERNAME }}