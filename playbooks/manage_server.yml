---
- name: Add server IP to group
  hosts: localhost

  vars: 
    HETZNER_TOKEN: "{{ lookup('env', 'HETZNER_TOKEN') }}"
    HETZNER_NAME: "{{ lookup('env', 'HETZNER_NAME') }}"

  tasks:
    - name: Retrieve server
      hcloud_server_info:
        api_token: "{{ HETZNER_TOKEN }}"
        name: "{{ HETZNER_NAME }}"
      register: server_info

    - name: Add retrieved IP to group
      add_host:
        name: "{{ server_info.hcloud_server_info[0].ipv4_address }}"
        groups: servers

    - name: debug
      debug:
        var: 
        - server_info

- name: Manage server
  hosts: servers
  remote_user: root
  gather_facts: False

  tasks:
    - name: wait for connection
      wait_for_connection:
        delay: 30
        connect_timeout: 30
      
    - name: install ranger
      apt:
        name: 
        - ranger
        - git
        - curl
        - vim
        state: latest
        update_cache: yes

    - name: Make docker group
      group:
        name: docker

    - name: Add new user called simon
      user:
        name: simon
        state: present
        groups:
          - sudo
          - docker
        shell: /bin/bash
        home: /home/simon
        password: "$6$ZEJ2moV5n38aTwBh$RhoLEsHukiiadWiRovoN/XvQ61B0LNe1C2Lqk/mpzyYEenF0GefhblxEDpa9D8GMWfOjQa/kArY2h.6rYjUps/" # sudo apt update && sudo apt install python3 python3-bcrypt && python3 -c 'import crypt,getpass;pw=getpass.getpass();print(crypt.crypt(pw) if (pw==getpass.getpass("Confirm: ")) else exit())'

    - name: Make /home/simon/.ssh dir
      file:
        path: /home/simon/.ssh
        state: directory
        owner: simon
        group: simon

    - name: Copy root ssh key to new user
      copy:
        src: /root/.ssh/authorized_keys
        dest: /home/simon/.ssh/authorized_keys
        owner: simon
        group: simon
        mode: 0600
        remote_src: yes
        follow: yes

    - name: Run shell command
      shell: echo "#\!/bin/bash\nexport PS1='[\[\e[32m\]\u\[\e[m\]@\[\e[35m\]\h\[\e[m\]] \[\e[31m\]\w\[\e[m\] \[\e[32m\]â‡¨\[\e[m\]  '" > /home/simon/.bashrc && curl https://raw.githubusercontent.com/Shirobachi/dot-files/main/.aliases | grep -e 'alias\|export' >> /home/simon/.bashrc

    - name: Copy /home/simon/.bashrc to /root/.bashrc
      copy:
        src: /home/simon/.bashrc
        dest: /root/.bashrc
        owner: root
        mode: 0600
        remote_src: yes
        follow: yes

    - name: Install Docker
      ansible.builtin.shell: cd ~ && curl -fsSL https://get.docker.com -o get-docker.sh && sudo sh get-docker.sh && sudo rm get-docker.sh && sudo systemctl enable docker && sudo systemctl start docker

    - name: Install Docker Compose
      ansible.builtin.shell: curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose && sudo chmod +x /usr/local/bin/docker-compose

    - name: Make sure dir /opt exist
      file:
        path: /opt
        state: directory
        owner: simon
        group: simon

    - name: Prepare nginx-proxy-manager (make dir)
      file:
        path: /opt/nginx-proxy-manager
        state: directory
        owner: simon
        group: simon

    - name: Prepare nginx-proxy-manager (copy file)
      copy:
        src: ./Templates/nginx-proxy-manager.yml
        dest: /opt/nginx-proxy-manager/docker-compose.yml
        owner: simon
        group: simon
        mode: 0600
        follow: yes

    - name: Prepare portainer (make dir)
      file:
        path: /opt/portainer
        state: directory
        owner: simon
        group: simon

    - name: Prepare portainer (copy file)
      copy:
        src: ./Templates/portainer.yml
        dest: /opt/portainer/docker-compose.yml
        owner: simon
        group: simon
        mode: 0600
        follow: yes